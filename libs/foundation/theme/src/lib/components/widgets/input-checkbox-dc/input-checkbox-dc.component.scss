@import '~@gosi-ui/foundation-theme/src/scss/index';

.container {
  display: flex;
  position: relative;
  padding-left: toRem(0);
  // margin-bottom: 12px;
  cursor: pointer;
  font-size: 1rem;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  margin-left: toRem(0);
  .disabled-tooltip {
    z-index: -1;
  }
  .label {
    font-size: 1.1rem;
    font-weight: 400;
  }
  &.no-padding {
    padding: 0rem !important;
  }
  .form-check-label {
    padding-left: toRem(10);
    color: $gray-900;
    display: flex;
    &.disable-label {
      color: $gray-900 !important;
    }
  }
}

/* Create a custom checkbox */
.checkmark {
  position: inherit;
  top: 0;
  float: left;
  left: 0;
  height: toRem(17);
  min-width: toRem(17);
  margin-top: 2px;
  background-color: $white;
  border: toRem(2) solid #999999;
  border-radius: 0.25rem;
  &.disabled {
    pointer-events: none;
    border: toRem(2) solid #cccccc;
  }
}
.container input {
  position: absolute;
  opacity: 0;
  left: 0;
  top: 3px;
  cursor: pointer;
  height: toRem(17);
  width: toRem(17);
  z-index: 1000;
}

.form-group.is-invalid {
  .checkmark {
    border: solid $red 0.15rem;
  }
}

.red-color {
  border: solid $red 0.15rem;
}
.less-padding {
  &.container {
    padding-left: toRem(15);
    padding-right: toRem(15);
    .checkmark::after {
      left: toRem(23);
      right: toRem(23);
    }
  }
}

.no-spacing {
  &.container {
    padding-left: 0px;
    padding-right: 0px;
    margin-left: 0px;
    margin-right: 0px;
  }
}

:host-context(html[dir='rtl']) {
  .container {
    padding-right: 0px;
    margin-right: 0px;
    input {
      right: 0;
    }
  }
  .checkmark {
    left: auto;
    right: 0rem;
    float: right;
  }
  .form-check-label {
    padding-right: toRem(10);
    padding-left: 0rem;
  }
  ::ng-deep .ng-select {
    .ng-select-container {
      .ng-value-container {
        .ng-value {
          .ng-value-icon {
            padding: 0px toRem(2) 0 toRem(15) !important;
          }
        }
      }
    }
  }
  .input-group {
    input {
      direction: ltr !important;
      text-align: right !important;
      padding-right: 0.8rem;
    }
  }
  .form-check-input {
    margin-right: -1.25rem;
  }

  .less-padding {
    &.container {
      padding-right: toRem(15);
    }
  }

  .no-spacing {
    &.container {
      padding-right: 0px;
    }
  }
}

.container input:hover + .checkmark {
  border: toRem(2) solid $green-400;
  &.disabled {
    pointer-events: none;
    border: toRem(2) solid #cccccc;
  }
}
.container input:hover ~ .form-check-label {
  color: $gray-900 !important;
}
/* When the checkbox is checked, add a blue background */
.container input:checked ~ .checkmark {
  background-color: $white;
  border: toRem(2) solid $green-400;
  &.disabled {
    pointer-events: none;
    border: toRem(2) solid #cccccc;
  }
}
.container input:not(:checked) ~ .form-check-label {
  color: $gray-800;
}

/* Create the checkmark/indicator (hidden when not checked) */
.checkmark:after {
  content: '';
  position: absolute;
  display: none;
}

/* Style the checkmark/indicator */
.container .checkmark:after {
  left: toRem(5);
  top: toRem(4);
  right: toRem(5);
  width: toRem(7);
  display: flex;
  height: toRem(11);
  // border: solid white;
  border-width: 0 toRem(3) toRem(3) 0;
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
}
.no-margin {
  margin-bottom: 0rem !important;
  .container .checkmark:after {
    left: toRem(9);
    right: toRem(8);
    top: toRem(6);
  }
}
/* Show the checkmark when checked */
.container input:checked ~ .checkmark:after {
  display: block;
  border: solid $green-400;
  border-width: 0 toRem(3) toRem(3) 0;
}

.container input:checked ~ .disabled.checkmark:after {
  display: block;
  border: solid #cccccc;
  border-width: 0 toRem(3) toRem(3) 0;
  pointer-events: none;
}

@media (max-width: 500px) {
  .container input:hover + .checkmark {
    border: toRem(2) solid #999999;
    &.disabled {
      pointer-events: none;
      border: toRem(2) solid #cccccc;
    }
  }
  .container input:checked ~ .checkmark {
    border: toRem(2) solid $green-400;
    &.disabled {
      pointer-events: none;
      border: toRem(2) solid #cccccc;
    }
  }
  .no-margin {
    margin-bottom: 0rem !important;
    .container .checkmark:after {
      left: toRem(7);
      right: toRem(7);
      top: toRem(4);
    }
  }
}
